        center = QWidget()
        self.center_lay = QGridLayout(center)
        self.center_lay.setContentsMargins(0, 0, 0, 0)
        self.center_lay.setHorizontalSpacing(0)
        self.center_lay.setVerticalSpacing(8)

        # Colonne session
        self.session_col = QWidget()
        self.session_col.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sc_lay = QVBoxLayout(self.session_col)
        sc_lay.setContentsMargins(SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN)
        sc_lay.setSpacing(6)

        sec_label = QLabel("SESSION")
        sec_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_SECTION_TITLE, QFont.Bold))
        sc_lay.addWidget(sec_label)
        self._align_top(sc_lay, sec_label)
        sc_lay.addSpacing(SECTION_TITLE_GAP)


        info_rows = QWidget()
        ir_lay = QGridLayout(info_rows)
        ir_lay.setContentsMargins(0, 0, 0, 0)
        ir_lay.setHorizontalSpacing(12)
        ir_lay.setVerticalSpacing(4)

        self.session_time_label = QLabel("Temps de session :")
        self.session_time_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        ir_lay.addWidget(self.session_time_label, 0, 0, Qt.AlignLeft | Qt.AlignVCenter)

        self.session_time_value = QLabel("-:--:--")
        self.session_time_value.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        ir_lay.addWidget(self.session_time_value, 0, 1, Qt.AlignLeft | Qt.AlignVCenter)

        self.track_label = QLabel("Circuit :")
        self.track_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        ir_lay.addWidget(self.track_label, 1, 0, Qt.AlignLeft | Qt.AlignVCenter)

        self.track_value = QLabel("---")
        self.track_value.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        self.track_value.setWordWrap(False)
        self.track_value.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        fm = QFontMetrics(self.track_value.font())
        self.track_value.setMinimumWidth(fm.horizontalAdvance("W" * 28))
        ir_lay.addWidget(self.track_value, 1, 1, Qt.AlignLeft | Qt.AlignVCenter)

        self.car_label = QLabel("Voiture :")
        self.car_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        ir_lay.addWidget(self.car_label, 2, 0, Qt.AlignLeft | Qt.AlignVCenter)

        self.car_value = QLabel("---")
        self.car_value.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        self.car_value.setWordWrap(False)
        self.car_value.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        fm_car = QFontMetrics(self.car_value.font())
        self.car_value.setMinimumWidth(fm_car.horizontalAdvance("W" * 28))
        ir_lay.addWidget(self.car_value, 2, 1, Qt.AlignLeft | Qt.AlignVCenter)

        ir_lay.setColumnStretch(0, 0)
        ir_lay.setColumnStretch(1, 1)
        sc_lay.addWidget(info_rows)

        s = _hsep(self.session_col); self._seps.append(s)
        sc_lay.addSpacing(SECTION_SEPARATOR_SPACING); sc_lay.addWidget(s); sc_lay.addSpacing(SECTION_SEPARATOR_SPACING)

        ranking_header = QWidget()
        rh_lay = QHBoxLayout(ranking_header)
        rh_lay.setContentsMargins(0, 0, 0, 0)
        self.absolute_ranking_label = QLabel("Classement :")
        self.absolute_ranking_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        rh_lay.addWidget(self.absolute_ranking_label)
        self._align_top(rh_lay, self.absolute_ranking_label)
        rh_lay.addStretch(1)
        self.rankings_btn = QPushButton("")
        self.rankings_btn.setCursor(Qt.PointingHandCursor)
        self.rankings_btn.setProperty("variant", "icon")
        self.rankings_btn.setFixedSize(32, 32)
        self.rankings_btn.setIconSize(QSize(self._action_icon_px, self._action_icon_px))
        self.rankings_btn.setToolTip("Afficher le classement complet")
        self.rankings_btn.setFont(QFont(FONT_FAMILY, FONT_SIZE_BUTTON))
        rh_lay.addWidget(self.rankings_btn)
        self._align_top(rh_lay, self.rankings_btn)
        sc_lay.addWidget(ranking_header)

        ranking_rows = QWidget()
        rr_lay = QVBoxLayout(ranking_rows)
        rr_lay.setContentsMargins(0, 0, 0, 0)
        rr_lay.setSpacing(4)
        self._medal_icon_px = MEDAL_ICON_SIZE
        medal_defs = [
            (MEDAL_GOLD_ICON_PATH, "Nico"),
            (MEDAL_SILVER_ICON_PATH, "Booki"),
            (MEDAL_BRONZE_ICON_PATH, "Gillou"),
        ]
        self.absolute_rank_rows = []
        for medal_path, placeholder_name in medal_defs:
            row = QWidget()
            row_lay = QHBoxLayout(row)
            row_lay.setContentsMargins(0, 0, 0, 0)
            row_lay.setSpacing(8)

            medal_label = QLabel()
            medal_label.setFixedSize(self._medal_icon_px, self._medal_icon_px)
            medal_label.setSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
            medal_pix = self._load_svg_pixmap(medal_path, self._medal_icon_px)
            if not medal_pix.isNull():
                scaled = medal_pix.scaled(
                    self._medal_icon_px,
                    self._medal_icon_px,
                    Qt.KeepAspectRatio,
                    Qt.SmoothTransformation,
                )
                medal_label.setPixmap(scaled)
            row_lay.addWidget(medal_label)

            time_label = QLabel("-:--.---")
            time_font = QFont(FONT_FAMILY, FONT_SIZE_LAPTIME, QFont.Bold)
            time_label.setFont(time_font)
            time_label.setAlignment(Qt.AlignLeft | Qt.AlignVCenter)
            row_lay.addWidget(time_label)

            player_label = QLabel(placeholder_name)
            player_font = QFont(FONT_FAMILY, FONT_SIZE_RANKING_PLAYER)
            player_font.setWeight(self._resolve_font_weight(FONT_WEIGHT_RANKING_PLAYER))
            player_label.setFont(player_font)
            player_label.setAlignment(Qt.AlignRight | Qt.AlignVCenter)
            player_label.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
            row_lay.addWidget(player_label, 1)

            rr_lay.addWidget(row)
            self.absolute_rank_rows.append(
                {"medal": medal_label, "time": time_label, "player": player_label, "path": medal_path}
            )

        sc_lay.addWidget(ranking_rows)

        s = _hsep(self.session_col); self._seps.append(s)
        sc_lay.addSpacing(SECTION_SEPARATOR_SPACING); sc_lay.addWidget(s); sc_lay.addSpacing(SECTION_SEPARATOR_SPACING)

        # Températures/usure pneus
        tires_section = QWidget()
        tires_section.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        tires_layout = QVBoxLayout(tires_section)
        tires_layout.setContentsMargins(0, 0, 0, 0)
        tires_layout.setSpacing(12)

        tires_title = QLabel("Pneus")
        tires_title.setFont(QFont(FONT_FAMILY, FONT_SIZE_SECTION_TITLE, QFont.Bold))
        tires_title.setAlignment(Qt.AlignCenter)
        tires_layout.addWidget(tires_title)
        self._align_top(tires_layout, tires_title)

        tires_content = QWidget()
        tc_lay = QHBoxLayout(tires_content)
        tc_lay.setContentsMargins(0, 0, 0, 0)
        tc_lay.setSpacing(24)
        tires_content.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        tires_layout.addWidget(tires_content, 1)

        temp_column = QWidget()
        temp_column.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        temp_col_lay = QVBoxLayout(temp_column)
        temp_col_lay.setContentsMargins(0, 0, 0, 0)
        temp_col_lay.setSpacing(12)

        temp_label = QLabel("Températures :")
        temp_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        temp_label.setAlignment(Qt.AlignCenter)
        temp_col_lay.addWidget(temp_label)
        self._align_top(temp_col_lay, temp_label)
        temp_col_lay.addSpacing(TIRE_SECTION_HEADER_SPACING)

        temp_grid = QGridLayout()
        temp_grid.setContentsMargins(0, 0, 0, 0)
        temp_grid.setHorizontalSpacing(24)
        temp_grid.setVerticalSpacing(12)
        temp_col_lay.addLayout(temp_grid, 1)

        temp_grid.setColumnStretch(0, 1)
        temp_grid.setColumnStretch(1, 1)
        temp_grid.setRowStretch(0, 1)
        temp_grid.setRowStretch(1, 1)

        temp_positions = [("AVG", 0, 0), ("AVD", 0, 1), ("ARG", 1, 0), ("ARD", 1, 1)]
        for code, row, col in temp_positions:
            widget = _TireInfoWidget(code, TIRE_TEMP_PLACEHOLDER, TIRE_ICON_PATH)
            temp_grid.addWidget(widget, row, col)
            self._tire_widgets.append(widget)
            self._tires_map["temperature"][code] = widget

        tc_lay.addWidget(temp_column, 1, Qt.AlignTop)

        sep_tires = _vsep(tires_content); self._seps.append(sep_tires)
        sep_tires.setSizePolicy(QSizePolicy.Fixed, QSizePolicy.Expanding)
        tc_lay.addWidget(sep_tires)

        wear_column = QWidget()
        wear_column.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        wear_col_lay = QVBoxLayout(wear_column)
        wear_col_lay.setContentsMargins(0, 0, 0, 0)
        wear_col_lay.setSpacing(12)

        wear_label = QLabel("Profil :")
        wear_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        wear_label.setAlignment(Qt.AlignCenter)
        wear_col_lay.addWidget(wear_label)
        self._align_top(wear_col_lay, wear_label)
        wear_col_lay.addSpacing(TIRE_SECTION_HEADER_SPACING)

        wear_grid = QGridLayout()
        wear_grid.setContentsMargins(0, 0, 0, 0)
        wear_grid.setHorizontalSpacing(24)
        wear_grid.setVerticalSpacing(12)
        wear_col_lay.addLayout(wear_grid, 1)

        wear_grid.setColumnStretch(0, 1)
        wear_grid.setColumnStretch(1, 1)
        wear_grid.setRowStretch(0, 1)
        wear_grid.setRowStretch(1, 1)

        wear_positions = [("AVG", 0, 0), ("AVD", 0, 1), ("ARG", 1, 0), ("ARD", 1, 1)]
        for code, row, col in wear_positions:
            widget = _TireInfoWidget(code, TIRE_WEAR_PLACEHOLDER, TIRE_ICON_PATH)
            wear_grid.addWidget(widget, row, col)
            self._tire_widgets.append(widget)
            self._tires_map["wear"][code] = widget

        tc_lay.addWidget(wear_column, 1, Qt.AlignTop)

        sc_lay.addWidget(tires_section, 1)

        # Colonne joueur
        self.player_col = QWidget()
        self.player_col.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        pc_lay = QVBoxLayout(self.player_col)
        pc_lay.setContentsMargins(SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN)
        pc_lay.setSpacing(6)

        header_player = QWidget()
        hp_lay = QHBoxLayout(header_player)
        hp_lay.setContentsMargins(0, 0, 0, 0)
        title_player = QLabel("JOUEUR")
        title_player.setFont(QFont(FONT_FAMILY, FONT_SIZE_SECTION_TITLE, QFont.Bold))
        hp_lay.addWidget(title_player)
        self._align_top(hp_lay, title_player)
        hp_lay.addStretch(1)
        self.edit_players_btn = QPushButton("")
        self.edit_players_btn.setCursor(Qt.PointingHandCursor)
        self.edit_players_btn.setProperty("variant", "icon")
        self.edit_players_btn.setFixedSize(32, 32)
        self.edit_players_btn.setIconSize(QSize(self._action_icon_px, self._action_icon_px))
        self.edit_players_btn.setToolTip("Éditer la liste des joueurs")
        self.edit_players_btn.setFont(QFont(FONT_FAMILY, FONT_SIZE_BUTTON))
        self.edit_players_btn.setEnabled(False)  # placeholder inchangé
        hp_lay.addWidget(self.edit_players_btn)
        self._align_top(hp_lay, self.edit_players_btn)
        pc_lay.addWidget(header_player)
        pc_lay.addSpacing(SECTION_TITLE_GAP)

        self._players_list = list(players) if players else ["---"]
        self.player_combo = QComboBox()
        self.player_combo.setEditable(False)
        self.player_combo.addItems(self._players_list)
        self.player_combo.setCurrentIndex(0)
        self.player_combo.setStyleSheet(
            f"QComboBox{{font-family:{FONT_FAMILY}; font-size:{FONT_SIZE_PLAYER}pt;}}"
        )
        self.player_combo.currentTextChanged.connect(self._on_player_changed)
        pc_lay.addWidget(self.player_combo)

        s = _hsep(self.player_col); self._seps.append(s)
        pc_lay.addSpacing(SECTION_SEPARATOR_SPACING); pc_lay.addWidget(s); pc_lay.addSpacing(SECTION_SEPARATOR_SPACING)

        lbl_personal = QLabel("Record personnel :")
        lbl_personal.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        pc_lay.addWidget(lbl_personal)
        self.best_time_label = QLabel("-:--.---")
        self.best_time_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LAPTIME, QFont.Bold))
        self.best_time_label.setAlignment(Qt.AlignCenter)
        pc_lay.addWidget(self.best_time_label)

        s = _hsep(self.player_col); self._seps.append(s)
        pc_lay.addSpacing(SECTION_SEPARATOR_SPACING); pc_lay.addWidget(s); pc_lay.addSpacing(SECTION_SEPARATOR_SPACING)

        lbl_last = QLabel("Dernier tour :")
        lbl_last.setFont(QFont(FONT_FAMILY, FONT_SIZE_LABELS))
        pc_lay.addWidget(lbl_last)
        self.current_lap_label = QLabel("-:--.---")
        self.current_lap_label.setFont(QFont(FONT_FAMILY, FONT_SIZE_LAPTIME, QFont.Bold))
        self.current_lap_label.setAlignment(Qt.AlignCenter)
        pc_lay.addWidget(self.current_lap_label)
        pc_lay.addStretch(1)

        # Colonne derniers tours
        self.laps_col = QWidget()
        self.laps_col.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        lc_lay = QVBoxLayout(self.laps_col)
        lc_lay.setContentsMargins(SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN)
        lc_lay.setSpacing(6)
        cap = QLabel("DERNIERS TOURS")
        cap.setFont(QFont(FONT_FAMILY, FONT_SIZE_SECTION_TITLE, QFont.Bold))
        lc_lay.addWidget(cap)
        self._align_top(lc_lay, cap)
        lc_lay.addSpacing(SECTION_TITLE_GAP)

        self.laps_list = _LastLapsList()
        self._populate_laps_placeholder()
        lc_lay.addWidget(self.laps_list, 1)

        # Colonne debug (masquable)
        self.debug_col = QWidget()
        self.debug_col.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        dc_lay = QVBoxLayout(self.debug_col)
        dc_lay.setContentsMargins(SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN, SECTION_MARGIN)
        dc_lay.setSpacing(6)
        header_dbg = QWidget()
        hd_lay = QHBoxLayout(header_dbg)
        hd_lay.setContentsMargins(0, 0, 0, 0)
        lbl_dbg = QLabel("DEBUG")
        lbl_dbg.setFont(QFont(FONT_FAMILY, FONT_SIZE_SECTION_TITLE, QFont.Bold))
        hd_lay.addWidget(lbl_dbg)
        self._align_top(hd_lay, lbl_dbg)
        hd_lay.addStretch(1)
        self.debug_toggle_btn = QPushButton("")
        self.debug_toggle_btn.setCursor(Qt.PointingHandCursor)
        self.debug_toggle_btn.setProperty("variant", "icon")
        self.debug_toggle_btn.setFixedSize(32, 32)
        self.debug_toggle_btn.setIconSize(QSize(self._action_icon_px, self._action_icon_px))
        self.debug_toggle_btn.setToolTip("Masquer la zone debug")
        self.debug_toggle_btn.setFont(QFont(FONT_FAMILY, FONT_SIZE_BUTTON))
        self.debug_toggle_btn.clicked.connect(lambda: self._set_debug_visible(False))
        hd_lay.addWidget(self.debug_toggle_btn)
        self._align_top(hd_lay, self.debug_toggle_btn)
        dc_lay.addWidget(header_dbg)
        dc_lay.addSpacing(SECTION_TITLE_GAP)

        self.debug_text = QPlainTextEdit()
        self.debug_text.setReadOnly(True)
        self.debug_text.setFrameShape(QFrame.NoFrame)
        self.debug_text.setFont(QFont(FONT_FAMILY, FONT_SIZE_DEBUG))
        self.debug_text.setWordWrapMode(QTextOption.WrapAnywhere)
        dc_lay.addWidget(self.debug_text, 1)

        # Placement grid (session | sep | joueur | sep | tours | sep | debug)
        self.center_lay.addWidget(self.session_col, 0, 0)
        self._sep_1 = _vsep(center); self._seps.append(self._sep_1)
        self.center_lay.addWidget(self._sep_1, 0, 1)
        self.center_lay.addWidget(self.player_col, 0, 2)
        self._sep_2 = _vsep(center); self._seps.append(self._sep_2)
        self.center_lay.addWidget(self._sep_2, 0, 3)
        self.center_lay.addWidget(self.laps_col, 0, 4)
        self._sep_debug = _vsep(center); self._seps.append(self._sep_debug)
        self.center_lay.addWidget(self._sep_debug, 0, 5)
        self.center_lay.addWidget(self.debug_col, 0, 6)

        for col in (0, 2, 4, 6):
            self.center_lay.setColumnStretch(col, 1)
        for col in (1, 3, 5):
            self.center_lay.setColumnStretch(col, 0)

